variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - test
  - release
  - deploy

build-job:
  stage: build
  script:
  - cd frontend
  - npm install
  - npm run build
  - cd ..
  - mkdir sausage-store-${VERSION}
  - mv frontend/dist/frontend sausage-store-${VERSION}/public_html
  #- touch sausage-store-${VERSION}/public_html/test3.txt # Тест роллбэка. Работает. Роллбэк всмысле.
  artifacts:
    paths:
    - sausage-store-${VERSION}/public_html

  rules:
      - changes:
           - frontend/*


sonarq-frontend-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - cd frontend
    - sonar-scanner
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=02_alexander_volokhov_frontend
      -Dsonar.projectName=02_alexander_volokhov_frontend
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN

upload-release:
  stage: release
  script:
  - tar czvf sausage-store-${VERSION}.tar.gz sausage-store-${VERSION}/public_html #!!!
  - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_FRONTEND_REPO_URL}/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

  rules:
      - changes:
           - frontend/*

deploy:
  stage: deploy
  when: manual
  before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/sausage-store-front.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-front.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "DEV_USER=${DEV_USER}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}"; export "NEXUS_FRONTEND_REPO_URL=${NEXUS_FRONTEND_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; setsid /bin/bash -s " < ./frontend/deploy.sh 
  environment:
    name: staging-frontend
    url: http://130.193.48.24/
