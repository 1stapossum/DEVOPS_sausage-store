stages:
- build
- test
- release

build-job:
  stage: build
  script:
  - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.TXT
  - cd backend
  - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
  - cd ../frontend
  - npm install
  - npm run build
  - cd ..
  - mkdir sausage-store-0.0.1
  - mv backend/target/sausage-store-0.0.1-SNAPSHOT.jar sausage-store-0.0.1/sausage-store-0.0.1.jar
  - mv frontend/dist/frontend sausage-store-0.0.1/public_html
 
  artifacts:
    paths:
    - sausage-store-0.0.1/public_html
    - sausage-store-0.0.1/sausage-store-0.0.1.jar
    - ${CI_PROJECT_DIR}/.m2/
    reports:
      dotenv: CI_JOB_ID.TXT

spotbugs-sast:
  variables:
    COMPILE: "false"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

sonarq-backend-check:
  stage: test
  #image: ciricihq/gitlab-sonar-scanner  # РАБОТАЕТ
  image: maven:3.8.3-openjdk-16
  
  variables:
      #  SONAR_ANALYSIS_MODE: issues
  script:
  - cd backend
  - mvn sonar:sonar
    -Dsonar.projectKey=02_alexander_volokhov_backend
    -Dsonar.projectName=02_alexander_volokhov_backend
    -Dsonar.host.url=$SONAR_URL
    -Dsonar.login=$SONAR_TOKEN
    #-Dsonar.java.binaries=.
    #-Dsonar.java.libraries=.
    #-Dsonar.sources=.

sonarq-frontend-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  script:
  - cd frontend
  - sonar-scanner 
    -Dsonar.qualitygate.wait=true
    -Dsonar.projectKey=02_alexander_volokhov_frontend
    -Dsonar.projectName=02_alexander_volokhov_frontend
    -Dsonar.sources=.
    -Dsonar.host.url=$SONAR_URL
    -Dsonar.login=$SONAR_TOKEN
    -Dsonar.java.binaries=.
    -Dsonar.java.libraries=.

upload-release:
  stage: release
  script:
  - echo "$MY_TOKEN"
  - echo "Get artifact from job ${ARTIFACT_JOB_ID}"
  - 'curl -k --verbose --location --output sausage-store-0.0.1.zip -H "PRIVATE-TOKEN:
    ${MY_TOKEN}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${ARTIFACT_JOB_ID}/artifacts"'
  - "curl --verbose -sSL -H \"JOB-TOKEN: ${CI_JOB_TOKEN}\" -T sausage-store-0.0.1.zip
    \"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/sausage-store/${CI_COMMIT_SHA}/\"
    \n"
 # - 'curl -X POST -H "Content-type: application/json" --data "{\"text\":\"Александр
  #  Волохов собрал приложение ${CI_COMMIT_BRANCH}. \"}" $SLACK_URL'