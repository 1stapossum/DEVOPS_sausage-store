variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  # JAVA_OPTS: -XX:MaxRAMPercentage=90

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  script:
    - cd backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
    - ls target
    #- cp backend/target/sausage-store-${VERSION}.jar backend/sausage-store-${VERSION}.jar  #Where file gone?!?!
  rules:
    - changes:
        - backend/*

  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/.m2/
spotbugs-sast:
  variables:
    COMPILE: "false"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml
sonarq-backend-check:
  stage: test

  image: maven:3.8.3-openjdk-16

  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - cd backend
    - mvn verify sonar:sonar
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=02_alexander_volokhov_backend
      -Dsonar.projectName=02_alexander_volokhov_backend
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN

release:
  stage: release
  script:
    - cd backend
    - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml

deploy:
  stage: deploy
  when: manual
  before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  script:  
  - scp ./backend/sausage-store.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store.service
  - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "DEV_USER=${DEV_USER}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}"; export "NEXUS_BACKEND_REPO_URL=${NEXUS_BACKEND_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; setsid /bin/bash -s " < ./backend/deploy.sh 