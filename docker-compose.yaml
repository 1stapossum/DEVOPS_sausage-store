version: "3.3"
services:
  backend:
    env_file:
     - .env
    image: ${CI_REGISTRY_IMAGE}/sausage-backend:${VERSION}
    container_name: sausage-backend
    restart: always
    environment:
      SPRING_DATASOURCE_USERNAME: ${PSQL_USER}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${PSQL_HOST}:${PSQL_PORT}/${PSQL_DBNAME}
      SPRING_FLYWAY_BASELINE-ON-MIGRATE: "true"
      SPRING_CLOUD_VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      VIRTUAL_HOST: virt_backend
      
    networks:
      - sausage_network
  
  backend-report:
    env_file:
     - .env
    image: ${CI_REGISTRY_IMAGE}/backend-report:${VERSION}
    container_name: backend-report
    restart: always
    environment:
      SPRING_CLOUD_VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
    networks:
      - sausage_network
  
  frontend:
    image: ${CI_REGISTRY_IMAGE}/sausage-frontend-nginx:${VERSION}
    container_name: sausage-frontend
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      DEFAULT_HOST: virt_backend
    networks:
      - sausage_network
  
  #frontend:
  #  env_file:
  #   - .env
  #  image: ${CI_REGISTRY_IMAGE}/sausage-frontend:${VERSION}
  #  container_name: sausage-frontend
  #  ports:
  #    - "80:80"
  #  networks:
  #    - sausage_network
  
  vault:
    env_file:
     - .env
    image: vault
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      VAULT_SERVER: "http://127.0.0.1:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
      
    networks:
      - sausage_network

networks:
  sausage_network:
    external: true
